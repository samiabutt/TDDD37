Lab2

Question 3, implement extensions:
mysql> create table jbmanager ( id int NOT NULL, bonus int NOT NULL DEFAULT 0, primary key (id), constraint fk_employee_id foreign key (id) references jbemployee (id) );
Query OK, 0 rows affected (0.02 sec)

mysql> insert into jbmanager (id)
    -> select manager from jbemployee where jbemployee.manager is not null
    -> union
    -> select manager from jbdept where jbdept.manager is not null;
Query OK, 12 rows affected (0.01 sec)
Records: 12  Duplicates: 0  Warnings: 0

mysql> alter table jbemployee drop foreign key fk_emp_mgr;
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> alter table jbemployee add constraint fk_emp_mgr foreign key (manager) references jbmanager (id);
Query OK, 25 rows affected (0.02 sec)
Records: 25  Duplicates: 0  Warnings: 0

mysql> alter table jbdept drop foreign key fk_dept_mgr;
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> alter table jbdept add constraint fk_dept_mgr foreign key (manager) references jbmanager (id);
Query OK, 19 rows affected (0.03 sec)
Records: 19  Duplicates: 0  Warnings: 0

Do you have to initialize the bonus attribute to a value? Why?
The bonus value should have a default value of 0. If it were null, you can't add it with an existing salary unless the manager already have a bonus. This is because it is not possible to perform addition with null values. Example:

mysql> select 100 + null;
+------------+
| 100 + null |
+------------+
|       NULL |
+------------+
1 row in set (0.00 sec)

Question 4, add bonus to department managers:
mysql> update jbmanager
    -> set bonus=bonus+10000
    -> where id in (select manager from jbdept);
Query OK, 11 rows affected (0.01 sec)
Rows matched: 11  Changed: 11  Warnings: 0

Question 5, implement extension:

mysql> create table jbcustomer (
    -> id int not null,
    -> name varchar(20),
    -> address varchar(40),
    -> city int,
    -> primary key (id),
    -> constraint fk_cust_living foreign key (city) references jbcity (id)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> create table jbaccount (
    -> id int not null,
    -> balance int not null default 0,
    -> customer int not null,
    -> primary key (id),
    -> constraint fk_cust_acc foreign key (customer) references jbcustomer (id)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> create table jbwithdrawal (
    -> id int,
    -> sdate timestamp not null default current_timestamp,
    -> amount int not null,
    -> account int not null,
    -> employee int not null,
    -> primary key (id),
    -> constraint fk_with_acc foreign key (account) references jbaccount (id),
    -> constraint fk_with_employee foreign key (employee) references jbemployee (id)
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> create table jbdeposit (
    -> id int,
    -> sdate timestamp not null default current_timestamp,
    -> amount int not null,
    -> account int not null,
    -> employee int not null,
    -> primary key (id),
    -> constraint fk_depo_acc foreign key (account) references jbaccount (id),
    -> constraint fk_depo_employee foreign key (employee) references jbemployee (id)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> delete from jbsale;
Query OK, 8 rows affected (0.01 sec)

mysql> delete from jbdebit;
Query OK, 6 rows affected (0.00 sec)

mysql> alter table jbdebit add constraint fk_debit_acc foreign key (account) references jbaccount (id);
Query OK, 6 rows affected (0.03 sec)
Records: 6  Duplicates: 0  Warnings: 0

We need to remove data from jbsale in order to remove data from jbdebit (foreign key constraint). We need to remove data from jbdebit in order to add a foreign key to account. This is because no accounts exists in the account table (we havn't added them yet), therefor, the foreign key constraint fk_debit_acc would fail for the data in the table referencing to non-existing keys in jbaccount.
